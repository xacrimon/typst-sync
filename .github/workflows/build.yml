name: build
on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: build-workflow
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  render:
    runs-on: ubuntu-latest
    outputs:
      do_update: ${{ steps.find_changed.outputs.do_update }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create build directory
        run: mkdir -p build
      - uses: actions/cache/restore@v4
        id: restore_rendered
        with:
          path: build/rendered
          key: build-rendered-${{ hashFiles('projects/**') }}
          restore-keys: |
            build-rendered-
      - id: diff
        env:
          cache_hit: ${{ steps.restore_rendered.outputs.cache-hit }}
          cache_full_match: ${{ steps.restore_rendered.outputs.cache-primary-key == steps.restore-rendered.outputs.cache-matched-key }}
        run: |
          echo "$cache_hit"
          echo "$cache_full_match"

          if [ "$cache_hit" == 'true' && "$cache_full_match" == 'true' ]; then
            echo "no_build=true" >> "$GITHUB_OUTPUT"
          fi

          if [ "$cache_hit" == 'true' && "$cache_full_match" == 'false' ]; then
            commit_sha=${{ github.sha }}
            cache_commit_sha=$(cat build/rendered/commit_sha.txt | xargs echo -n)
            git diff --name-only ${commit_sha} ${cache_commit_sha} > build/changed_files.txt
            grep -A 1 "projects/.+" build/changed_files.txt | cut -d'/' -f2 | uniq > build/do_update.txt
          fi

          if [ "$cache_hit" == 'false' ]; then
            cp project-list.txt build/do_update.txt
          fi
      - name: Compute Typst dependencies
        if: ${{ steps.diff.outputs.no_build != 'true' }}
        run: |
          while IFS="" read -r p || [ -n "$p" ]
          do
            find "projects/$p" -type f -name "*.typ" -exec cat {} + >> build/amalgam.typ
          done < build/do_update.txt
          grep -A 1 "#import .*" build/amalgam.typ | uniq > build/requirements.typ
      - uses: typst-community/setup-typst@v4
        if: ${{ steps.diff.outputs.no_build != 'true' }}
        with:
          cache-dependency-path: build/requirements.typ
      - name: Build projects
        if: ${{ steps.diff.outputs.no_build != 'true' }}
        run: |
          mkdir -p build/rendered
          while IFS="" read -r p || [ -n "$p" ]
          do
            typst compile "projects/$p/main.typ" "build/rendered/${p}.pdf"
          done < build/do_update.txt
          echo "${{ github.sha }}" > build/rendered/commit_sha.txt
      - uses: actions/cache/save@v4
        if: ${{ steps.diff.outputs.no_build != 'true' }}
        with:
          path: build/rendered
          key: build-rendered-${{ hashFiles('projects/**') }}
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  tag:
    needs: render
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - run: |
          mv build/rendered .
          rm -r build
      - name: Create build tag
        run: |
          commit_sha=${{ github.sha }}
          commit_sha_short="${commit_sha:0:7}"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add rendered
          git commit -m "build ${commit_sha_short}"
          git tag "build-${commit_sha_short}"
          git tag -f build-latest
      - uses: ad-m/github-push-action@master
        with:
          force: true
          tags: true
          branch: build
